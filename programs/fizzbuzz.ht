(fn fizzbuzz (n)
  (cond ((and (= (mod n 3) 0) (= (mod n 5) 0)) "FizzBuzz")
        ((= (mod n 3) 0) "Fizz")
        ((= (mod n 5) 0) "Buzz")
        (true n)))

(assert (fizzbuzz 3) "Fizz" "fizz failed")
(assert (fizzbuzz 5) "Buzz" "buzz failed")
(assert (fizzbuzz 15) "FizzBuzz" "fizzbuzz failed")
(assert (fizzbuzz 1) 1 "fizz-buzz failed")

